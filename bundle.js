(()=>{"use strict";var n={249:(n,t,e)=>{e.d(t,{A:()=>s});var r=e(354),o=e.n(r),i=e(314),a=e.n(i)()(o());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap);"]),a.push([n.id,':root {\n    --primary-color: #2196f3;\n    --secondary-color: #ff9800;\n    --background-color: #f5f5f5;\n    --text-color: #333;\n    --success-color: #4CAF50;\n    --danger-color: #f44336;\n}\n\n/* Base Styles */\nbody {\n    font-family: \'Roboto\', sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: var(--background-color);\n    color: var(--text-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n}\n\n.container {\n    max-width: 500px;\n    width: 100%;\n    background-color: white;\n    border-radius: 20px;\n    box-shadow: 0 10px 25px rgba(0,0,0,0.1);\n    padding: 2rem;\n    text-align: center;\n}\n\n/* Header Styles */\n.app-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 1rem;\n    background: linear-gradient(to right, var(--primary-color), var(--secondary-color));\n    color: white;\n    margin: -2rem -2rem 1rem -2rem;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.metronome-logo {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-size: 1.2rem;\n    font-weight: 500;\n}\n\n/* Install Button */\n.install-button {\n    display: none;\n    align-items: center;\n    gap: 0.5rem;\n    padding: 0.75rem 1rem;\n    background-color: var(--success-color);\n    color: white;\n    border: none;\n    border-radius: 20px;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n    z-index: 1000;\n}\n\n.install-button svg {\n    width: 24px;\n    height: 24px;\n}\n\n.install-button:hover {\n    background-color: var(--success-color);\n    opacity: 0.9;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n}\n\n/* Mode Switcher */\n.mode-switcher {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 1.5rem;\n    gap: 1rem;\n}\n\n.mode-button {\n    padding: 10px 20px;\n    border: none;\n    border-radius: 6px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    font-weight: 500;\n    color: white;\n    text-transform: uppercase;\n}\n\n.mode-button.classic {\n    background-color: var(--primary-color);\n}\n\n.mode-button.training {\n    background-color: var(--secondary-color);\n}\n\n.mode-button.active {\n    transform: scale(1.1);\n    box-shadow: 0 4px 6px rgba(0,0,0,0.2);\n}\n\n/* Controls */\n.controls {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n}\n\n.tempo-settings {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n    margin-bottom: 1rem;\n}\n\n.start-stop-button {\n    background-color: var(--success-color);\n    color: white;\n    border: none;\n    padding: 12px 24px;\n    border-radius: 8px;\n    font-size: 1rem;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    min-width: 120px;\n}\n\n.start-stop-button:hover {\n    opacity: 0.9;\n}\n\n.start-stop-button.stopped {\n    background-color: var(--success-color);\n}\n\n.start-stop-button.running {\n    background-color: var(--danger-color);\n}\n\n.start-stop-button:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n}\n\n/* Training Mode Controls */\n.control-button {\n    padding: 8px 16px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    background-color: var(--primary-color);\n    color: white;\n}\n\n.control-button.next-song {\n    background-color: var(--secondary-color);\n}\n\n.control-button.add-song {\n    background-color: var(--success-color);\n}\n\n/* Visual Indicator */\n.visual-indicator {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: #ddd;\n    margin: 1rem auto;\n    transition: all 0.2s ease;\n}\n\n.visual-indicator.active {\n    background-color: var(--primary-color);\n    transform: scale(1.5);\n}\n\n/* Song List */\n.song-list-container {\n    margin-top: 1rem;\n    padding: 1rem;\n    background-color: rgba(0,0,0,0.05);\n    border-radius: 8px;\n    max-height: 300px;\n    overflow-y: auto;\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n}\n\n.song-list-container::-webkit-scrollbar {\n    display: none;\n}\n\n.song-list-container h3 {\n    margin: 0 0 1rem;\n    color: var(--primary-color);\n    text-align: center;\n}\n\n.song-item {\n    padding: 0.5rem;\n    margin: 0.25rem 0;\n    background-color: white;\n    border-radius: 4px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n    transition: all 0.3s ease;\n}\n\n.song-item.current {\n    background-color: var(--primary-color);\n    color: white;\n    transform: scale(1.02);\n}\n\n.song-item.next {\n    background-color: var(--secondary-color);\n    color: white;\n}\n\n/* Feedback Elements */\n.feedback-container {\n    margin-top: 1rem;\n    padding: 0.5rem;\n    min-height: 2rem;\n}\n\n/* Microphone Status */\n.mic-status {\n    margin: 1rem 0;\n    padding: 0.75rem;\n    border-radius: 6px;\n    background-color: rgba(255, 255, 255, 0.8);\n    box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n}\n\n.status-indicator {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    padding: 0.5rem;\n    border-radius: 4px;\n}\n\n.status-indicator.available {\n    background-color: rgba(75, 181, 67, 0.1);\n    color: #2d7c26;\n}\n\n.status-indicator.unavailable {\n    background-color: rgba(244, 67, 54, 0.1);\n    color: #c62828;\n}\n\n/* Mobile Styles */\n@media (max-width: 768px) {\n    .container {\n        min-height: 100vh;\n        border-radius: 0;\n        margin: 0;\n        padding: 1rem;\n        box-shadow: none;\n    }\n\n    .app-header {\n        position: sticky;\n        top: 0;\n        z-index: 100;\n        margin: -1rem -1rem 1rem -1rem;\n    }\n\n    .tempo-settings {\n        flex-direction: column;\n        gap: 0.5rem;\n        background-color: var(--background-color);\n        padding: 1rem;\n        border-radius: 15px;\n    }\n\n    #tempo-slider {\n        width: 100%;\n        height: 40px;\n        margin: 0.5rem 0;\n    }\n\n    #tempo-number {\n        width: 80px;\n        height: 40px;\n        font-size: 1.2rem;\n    }\n\n    .start-stop-button {\n        width: 100%;\n        height: 60px;\n        font-size: 1.2rem;\n        border-radius: 15px;\n    }\n\n    .install-button {\n        bottom: 16px;\n        right: 16px;\n        padding: 12px 16px;\n        font-size: 14px;\n    }\n\n    /* Touch Optimizations */\n    * {\n        -webkit-tap-highlight-color: transparent;\n        -webkit-touch-callout: none;\n        user-select: none;\n    }\n\n    button, \n    input[type="range"],\n    input[type="number"] {\n        min-height: 44px;\n        touch-action: manipulation;\n    }\n\n    /* iOS Safe Areas */\n    @supports (-webkit-touch-callout: none) {\n        body {\n            padding-top: env(safe-area-inset-top);\n            padding-bottom: env(safe-area-inset-bottom);\n        }\n    }\n}\n.bpm-feedback {\n    padding: 1rem;\n    border-radius: 8px;\n    margin: 1rem 0;\n    background-color: var(--background-color);\n    transition: all 0.3s ease;\n}\n\n.bpm-feedback.matching {\n    background-color: rgba(75, 181, 67, 0.1);\n    color: #2d7c26;\n}\n\n.bpm-feedback.not-matching {\n    background-color: rgba(244, 67, 54, 0.1);\n    color: #c62828;\n}\n\n.bpm-feedback .detected-bpm {\n    font-size: 1.2rem;\n    font-weight: 500;\n    margin: 0.5rem 0;\n}\n\n.bpm-feedback .accuracy-meter {\n    width: 100%;\n    height: 4px;\n    background-color: rgba(0, 0, 0, 0.1);\n    border-radius: 2px;\n    margin: 0.5rem 0;\n    overflow: hidden;\n}\n\n.bpm-feedback .accuracy-meter .fill {\n    height: 100%;\n    background-color: currentColor;\n    transition: width 0.3s ease;\n}\n\n/* Animation pour le feedback visuel */\n@keyframes pulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.05); }\n    100% { transform: scale(1); }\n}\n\n.bpm-feedback.matching .detected-bpm {\n    animation: pulse 0.5s ease-in-out;\n}',"",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap');\r\n\r\n:root {\r\n    --primary-color: #2196f3;\r\n    --secondary-color: #ff9800;\r\n    --background-color: #f5f5f5;\r\n    --text-color: #333;\r\n    --success-color: #4CAF50;\r\n    --danger-color: #f44336;\r\n}\r\n\r\n/* Base Styles */\r\nbody {\r\n    font-family: 'Roboto', sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: var(--background-color);\r\n    color: var(--text-color);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n}\r\n\r\n.container {\r\n    max-width: 500px;\r\n    width: 100%;\r\n    background-color: white;\r\n    border-radius: 20px;\r\n    box-shadow: 0 10px 25px rgba(0,0,0,0.1);\r\n    padding: 2rem;\r\n    text-align: center;\r\n}\r\n\r\n/* Header Styles */\r\n.app-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1rem;\r\n    background: linear-gradient(to right, var(--primary-color), var(--secondary-color));\r\n    color: white;\r\n    margin: -2rem -2rem 1rem -2rem;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.metronome-logo {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    font-size: 1.2rem;\r\n    font-weight: 500;\r\n}\r\n\r\n/* Install Button */\r\n.install-button {\r\n    display: none;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    padding: 0.75rem 1rem;\r\n    background-color: var(--success-color);\r\n    color: white;\r\n    border: none;\r\n    border-radius: 20px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n    position: fixed;\r\n    bottom: 20px;\r\n    right: 20px;\r\n    z-index: 1000;\r\n}\r\n\r\n.install-button svg {\r\n    width: 24px;\r\n    height: 24px;\r\n}\r\n\r\n.install-button:hover {\r\n    background-color: var(--success-color);\r\n    opacity: 0.9;\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0,0,0,0.2);\r\n}\r\n\r\n/* Mode Switcher */\r\n.mode-switcher {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 1.5rem;\r\n    gap: 1rem;\r\n}\r\n\r\n.mode-button {\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    font-weight: 500;\r\n    color: white;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.mode-button.classic {\r\n    background-color: var(--primary-color);\r\n}\r\n\r\n.mode-button.training {\r\n    background-color: var(--secondary-color);\r\n}\r\n\r\n.mode-button.active {\r\n    transform: scale(1.1);\r\n    box-shadow: 0 4px 6px rgba(0,0,0,0.2);\r\n}\r\n\r\n/* Controls */\r\n.controls {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1rem;\r\n}\r\n\r\n.tempo-settings {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 1rem;\r\n    margin-bottom: 1rem;\r\n}\r\n\r\n.start-stop-button {\r\n    background-color: var(--success-color);\r\n    color: white;\r\n    border: none;\r\n    padding: 12px 24px;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    min-width: 120px;\r\n}\r\n\r\n.start-stop-button:hover {\r\n    opacity: 0.9;\r\n}\r\n\r\n.start-stop-button.stopped {\r\n    background-color: var(--success-color);\r\n}\r\n\r\n.start-stop-button.running {\r\n    background-color: var(--danger-color);\r\n}\r\n\r\n.start-stop-button:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n}\r\n\r\n/* Training Mode Controls */\r\n.control-button {\r\n    padding: 8px 16px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    background-color: var(--primary-color);\r\n    color: white;\r\n}\r\n\r\n.control-button.next-song {\r\n    background-color: var(--secondary-color);\r\n}\r\n\r\n.control-button.add-song {\r\n    background-color: var(--success-color);\r\n}\r\n\r\n/* Visual Indicator */\r\n.visual-indicator {\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background-color: #ddd;\r\n    margin: 1rem auto;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.visual-indicator.active {\r\n    background-color: var(--primary-color);\r\n    transform: scale(1.5);\r\n}\r\n\r\n/* Song List */\r\n.song-list-container {\r\n    margin-top: 1rem;\r\n    padding: 1rem;\r\n    background-color: rgba(0,0,0,0.05);\r\n    border-radius: 8px;\r\n    max-height: 300px;\r\n    overflow-y: auto;\r\n    scrollbar-width: none;\r\n    -ms-overflow-style: none;\r\n}\r\n\r\n.song-list-container::-webkit-scrollbar {\r\n    display: none;\r\n}\r\n\r\n.song-list-container h3 {\r\n    margin: 0 0 1rem;\r\n    color: var(--primary-color);\r\n    text-align: center;\r\n}\r\n\r\n.song-item {\r\n    padding: 0.5rem;\r\n    margin: 0.25rem 0;\r\n    background-color: white;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.song-item.current {\r\n    background-color: var(--primary-color);\r\n    color: white;\r\n    transform: scale(1.02);\r\n}\r\n\r\n.song-item.next {\r\n    background-color: var(--secondary-color);\r\n    color: white;\r\n}\r\n\r\n/* Feedback Elements */\r\n.feedback-container {\r\n    margin-top: 1rem;\r\n    padding: 0.5rem;\r\n    min-height: 2rem;\r\n}\r\n\r\n/* Microphone Status */\r\n.mic-status {\r\n    margin: 1rem 0;\r\n    padding: 0.75rem;\r\n    border-radius: 6px;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n}\r\n\r\n.status-indicator {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    padding: 0.5rem;\r\n    border-radius: 4px;\r\n}\r\n\r\n.status-indicator.available {\r\n    background-color: rgba(75, 181, 67, 0.1);\r\n    color: #2d7c26;\r\n}\r\n\r\n.status-indicator.unavailable {\r\n    background-color: rgba(244, 67, 54, 0.1);\r\n    color: #c62828;\r\n}\r\n\r\n/* Mobile Styles */\r\n@media (max-width: 768px) {\r\n    .container {\r\n        min-height: 100vh;\r\n        border-radius: 0;\r\n        margin: 0;\r\n        padding: 1rem;\r\n        box-shadow: none;\r\n    }\r\n\r\n    .app-header {\r\n        position: sticky;\r\n        top: 0;\r\n        z-index: 100;\r\n        margin: -1rem -1rem 1rem -1rem;\r\n    }\r\n\r\n    .tempo-settings {\r\n        flex-direction: column;\r\n        gap: 0.5rem;\r\n        background-color: var(--background-color);\r\n        padding: 1rem;\r\n        border-radius: 15px;\r\n    }\r\n\r\n    #tempo-slider {\r\n        width: 100%;\r\n        height: 40px;\r\n        margin: 0.5rem 0;\r\n    }\r\n\r\n    #tempo-number {\r\n        width: 80px;\r\n        height: 40px;\r\n        font-size: 1.2rem;\r\n    }\r\n\r\n    .start-stop-button {\r\n        width: 100%;\r\n        height: 60px;\r\n        font-size: 1.2rem;\r\n        border-radius: 15px;\r\n    }\r\n\r\n    .install-button {\r\n        bottom: 16px;\r\n        right: 16px;\r\n        padding: 12px 16px;\r\n        font-size: 14px;\r\n    }\r\n\r\n    /* Touch Optimizations */\r\n    * {\r\n        -webkit-tap-highlight-color: transparent;\r\n        -webkit-touch-callout: none;\r\n        user-select: none;\r\n    }\r\n\r\n    button, \r\n    input[type=\"range\"],\r\n    input[type=\"number\"] {\r\n        min-height: 44px;\r\n        touch-action: manipulation;\r\n    }\r\n\r\n    /* iOS Safe Areas */\r\n    @supports (-webkit-touch-callout: none) {\r\n        body {\r\n            padding-top: env(safe-area-inset-top);\r\n            padding-bottom: env(safe-area-inset-bottom);\r\n        }\r\n    }\r\n}\r\n.bpm-feedback {\r\n    padding: 1rem;\r\n    border-radius: 8px;\r\n    margin: 1rem 0;\r\n    background-color: var(--background-color);\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.bpm-feedback.matching {\r\n    background-color: rgba(75, 181, 67, 0.1);\r\n    color: #2d7c26;\r\n}\r\n\r\n.bpm-feedback.not-matching {\r\n    background-color: rgba(244, 67, 54, 0.1);\r\n    color: #c62828;\r\n}\r\n\r\n.bpm-feedback .detected-bpm {\r\n    font-size: 1.2rem;\r\n    font-weight: 500;\r\n    margin: 0.5rem 0;\r\n}\r\n\r\n.bpm-feedback .accuracy-meter {\r\n    width: 100%;\r\n    height: 4px;\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n    border-radius: 2px;\r\n    margin: 0.5rem 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.bpm-feedback .accuracy-meter .fill {\r\n    height: 100%;\r\n    background-color: currentColor;\r\n    transition: width 0.3s ease;\r\n}\r\n\r\n/* Animation pour le feedback visuel */\r\n@keyframes pulse {\r\n    0% { transform: scale(1); }\r\n    50% { transform: scale(1.05); }\r\n    100% { transform: scale(1); }\r\n}\r\n\r\n.bpm-feedback.matching .detected-bpm {\r\n    animation: pulse 0.5s ease-in-out;\r\n}"],sourceRoot:""}]);const s=a},314:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),t.push(A))}},t}},354:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},72:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var c=n[s],l=r.base?c[0]+r.base:c[0],A=i[l]||0,d="".concat(l," ").concat(A);i[l]=A+1;var u=e(d),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(h);else{var p=o(h,r);r.byIndex=s,t.splice(s,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=e(i[a]);t[s].references--}for(var c=r(n,o),l=0;l<i.length;l++){var A=e(i[l]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}i=c}}},659:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},540:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},56:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},113:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return n[r](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0;var r=e(72),o=e.n(r),i=e(825),a=e.n(i),s=e(659),c=e.n(s),l=e(56),A=e.n(l),d=e(540),u=e.n(d),h=e(113),p=e.n(h),m=e(249),g={};g.styleTagTransform=p(),g.setAttributes=A(),g.insert=c().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u(),o()(m.A,g),m.A&&m.A.locals&&m.A.locals;class C{constructor(n){this.visualCallback=null,this.beatCount=0,this.audioContext=n.getAudioContext(),this.nextNoteTime=0,this.tempo=120,this.isPlaying=!1,this.soundEngine=n;const t=new Blob(['\n            let timerID = null;\n            self.onmessage = function(e) {\n                if (e.data === "start") {\n                    timerID = setInterval(function() {\n                        postMessage("tick");\n                    }, 25);\n                } else if (e.data === "stop") {\n                    clearInterval(timerID);\n                    timerID = null;\n                }\n            };\n        '],{type:"text/javascript"});this.timerWorker=new Worker(URL.createObjectURL(t)),this.timerWorker.onmessage=this.scheduler.bind(this)}setVisualCallback(n){this.visualCallback=n}start(){this.isPlaying||(this.isPlaying=!0,this.nextNoteTime=this.audioContext.currentTime,this.beatCount=0,this.timerWorker.postMessage("start"))}stop(){this.isPlaying=!1,this.timerWorker.postMessage("stop")}setTempo(n){this.tempo=Math.max(30,Math.min(250,n))}scheduler(){for(;this.nextNoteTime<this.audioContext.currentTime+.1;)this.scheduleNote(this.nextNoteTime),this.nextNoteTime+=60/this.tempo,this.beatCount++}scheduleNote(n){this.soundEngine.playClick(n),this.visualCallback&&setTimeout((()=>{var n;null===(n=this.visualCallback)||void 0===n||n.call(this)}),1e3*(n-this.audioContext.currentTime))}}class B{constructor(){if(console.warn("🔊 SoundEngine: Début de l'initialisation"),"undefined"!=typeof window){if(!window.AudioContext&&!window.webkitAudioContext)return console.error("❌ Web Audio API non supportée"),void alert("Votre navigateur ne supporte pas Web Audio API");try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),console.log("✅ Contexte audio créé"),this.clickBuffer=null,this.loadSounds().catch((n=>{console.error("❌ Erreur de chargement des sons:",n),this.clickBuffer=this.generateDefaultClickBuffer()}))}catch(n){console.error("❌ Erreur critique:",n)}}else console.error("❌ Environnement window non disponible")}getAudioContext(){if(!this.audioContext)throw new Error("Contexte audio non initialisé");return this.audioContext}loadSounds(){return n=this,t=void 0,r=function*(){console.log("🔊 Tentative de chargement du son");try{const n=yield fetch("/sounds/click.wav");if(console.log("📥 Réponse fetch:",n),!n.ok)throw new Error(`❌ Erreur HTTP: ${n.status}`);const t=yield n.arrayBuffer();console.log("📊 Taille du buffer:",t.byteLength),this.clickBuffer=yield this.audioContext.decodeAudioData(t,(n=>{console.log("✅ Son décodé avec succès",n)}),(n=>{console.error("❌ Erreur de décodage détaillée:",n)}))}catch(n){console.error("❌ Échec du chargement:",n),this.clickBuffer=this.generateDefaultClickBuffer()}},new((e=void 0)||(e=Promise))((function(o,i){function a(n){try{c(r.next(n))}catch(n){i(n)}}function s(n){try{c(r.throw(n))}catch(n){i(n)}}function c(n){var t;n.done?o(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}c((r=r.apply(n,t||[])).next())}));var n,t,e,r}generateDefaultClickBuffer(){console.warn("⚠️ Génération d'un son de clic par défaut");const n=this.audioContext.createBuffer(1,2048,this.audioContext.sampleRate),t=n.getChannelData(0);for(let n=0;n<t.length;n++){const e=n/this.audioContext.sampleRate,r=1e3,o=Math.exp(100*-e),i=Math.sign(Math.sin(2*Math.PI*r*e));t[n]=i*o}return n}playClick(n,t=1){if(console.log(`🎵 Tentative de lecture du son à ${n}`),this.clickBuffer)try{const e=this.audioContext.createBufferSource(),r=this.audioContext.createGain();e.buffer=this.clickBuffer,e.connect(r),r.connect(this.audioContext.destination),r.gain.value=t,e.start(n),console.log("✅ Son joué")}catch(n){console.error("❌ Erreur de lecture:",n)}else console.warn("⚠️ Aucun buffer audio disponible")}}var b=function(n,t,e,r){return new(e||(e=Promise))((function(o,i){function a(n){try{c(r.next(n))}catch(n){i(n)}}function s(n){try{c(r.throw(n))}catch(n){i(n)}}function c(n){var t;n.done?o(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}c((r=r.apply(n,t||[])).next())}))};class f{constructor(n,t,e){this.audioContext=n,this.targetBpm=t,this.onBpmMatch=e,this.DETECTION_WINDOW=2e3,this.PEAK_THRESHOLD=.5,this.MIN_PEAKS=3,this.TOLERANCE=5,this.peaks=[],this.consecutiveMatches=0,this.lastProcessedTime=0,this.movingAverage=[]}initialize(){return b(this,void 0,void 0,(function*(){try{const n=yield navigator.mediaDevices.getUserMedia({audio:{echoCancellation:!1,autoGainControl:!1,noiseSuppression:!1}});return this.audioContext.createMediaStreamSource(n)}catch(n){throw console.error("Erreur d'accès au microphone:",n),n}}))}processPeak(n){const t=performance.now();if(!(t-this.lastProcessedTime<50)&&n>this.PEAK_THRESHOLD){this.peaks.push(t),this.lastProcessedTime=t;const n=t-this.DETECTION_WINDOW;if(this.peaks=this.peaks.filter((t=>t>n)),this.peaks.length>=this.MIN_PEAKS){const n=this.calculateBpm();n>0&&this.validateBpm(n)}}}calculateBpm(){const n=[];for(let t=1;t<this.peaks.length;t++)n.push(this.peaks[t]-this.peaks[t-1]);const t=6e4/this.calculateMedian(n);return this.movingAverage.push(t),this.movingAverage.length>5&&this.movingAverage.shift(),this.calculateMedian(this.movingAverage)}createAnalyserNode(){const n=this.audioContext.createAnalyser();return n.fftSize=2048,n}initializeMicrophone(){return b(this,void 0,void 0,(function*(){try{const n=yield navigator.mediaDevices.getUserMedia({audio:{echoCancellation:!1,autoGainControl:!1,noiseSuppression:!1}});return this.audioContext.createMediaStreamSource(n)}catch(n){throw console.error("Erreur d'accès au microphone:",n),n}}))}validateBpm(n){Math.abs(n-this.targetBpm)<=this.TOLERANCE?(this.consecutiveMatches++,this.consecutiveMatches>=3&&this.onBpmMatch(!0,n)):(this.consecutiveMatches=0,this.onBpmMatch(!1,n))}calculateMedian(n){const t=[...n].sort(((n,t)=>n-t)),e=Math.floor(t.length/2);return t.length%2==0?(t[e-1]+t[e])/2:t[e]}reset(){this.peaks=[],this.consecutiveMatches=0,this.movingAverage=[],this.lastProcessedTime=0}}var v=function(n,t,e,r){return new(e||(e=Promise))((function(o,i){function a(n){try{c(r.next(n))}catch(n){i(n)}}function s(n){try{c(r.throw(n))}catch(n){i(n)}}function c(n){var t;n.done?o(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}c((r=r.apply(n,t||[])).next())}))};class x{constructor(n){this.microphone=null,this.analyser=null,this.bpmDetector=null,this.isRunning=!1,this.startTime=0,this.duration=30,this.countdownInterval=null,this.audioContext=n,this.targetBpm=120,this.clickBuffer=this.createClickBuffer()}createClickBuffer(){const n=this.audioContext.createBuffer(1,4096,this.audioContext.sampleRate),t=n.getChannelData(0);for(let n=0;n<t.length;n++){const e=n/this.audioContext.sampleRate,r=Math.exp(50*-e);t[n]=Math.sin(2*Math.PI*1e3*e)*r}return n}start(n){return v(this,void 0,void 0,(function*(){if(n<40||n>250)window.dispatchEvent(new CustomEvent("training-error",{detail:{message:"BPM must be between 40 and 250"}}));else if(!this.isRunning){this.targetBpm=n,this.startTime=this.audioContext.currentTime,this.isRunning=!0;try{this.bpmDetector=new f(this.audioContext,this.targetBpm,this.handleBpmMatch.bind(this)),yield this.initializeMicrophone().catch((n=>{console.warn("Microphone initialization failed, continuing without microphone",n)})),this.schedulePlayback(),this.startCountdown(),window.dispatchEvent(new CustomEvent("training-started",{detail:{targetBpm:this.targetBpm,duration:this.duration}}))}catch(n){console.error("Training mode initialization error:",n),this.stop(),window.dispatchEvent(new CustomEvent("training-error",{detail:{message:"Failed to start training mode"}}))}}}))}initializeMicrophone(){return v(this,void 0,void 0,(function*(){if(this.bpmDetector)try{this.microphone=yield this.bpmDetector.initializeMicrophone(),this.analyser=this.bpmDetector.createAnalyserNode(),this.microphone.connect(this.analyser),this.startAmplitudeAnalysis()}catch(n){throw console.error("Microphone access error:",n),n}}))}startAmplitudeAnalysis(){if(!this.analyser)return;const n=this.analyser.frequencyBinCount,t=new Float32Array(n),e=()=>{if(!this.isRunning||!this.analyser||!this.bpmDetector)return;this.analyser.getFloatTimeDomainData(t);const n=Math.max(...Array.from(t).map(Math.abs));this.bpmDetector.processPeak(n),requestAnimationFrame(e)};e()}handleBpmMatch(n,t){window.dispatchEvent(new CustomEvent("bpm-detection",{detail:{targetBpm:this.targetBpm,detectedBpm:t,isMatchingBpm:n}}))}startCountdown(){let n=this.duration;this.countdownInterval=window.setInterval((()=>{window.dispatchEvent(new CustomEvent("training-countdown",{detail:{remainingTime:n,totalDuration:this.duration}})),n--,n<0&&this.stop()}),1e3)}schedulePlayback(){const n=60/this.targetBpm;this.startTime;const t=()=>{if(!this.isRunning)return;const e=this.audioContext.currentTime-this.startTime,r=Math.max(0,1-e/this.duration);if(e<this.duration){const e=this.audioContext.createBufferSource(),o=this.audioContext.createGain();e.buffer=this.clickBuffer,e.connect(o),o.connect(this.audioContext.destination),o.gain.value=r,e.start(),setTimeout(t,1e3*n)}else this.stop()};t()}stop(){this.isRunning=!1,this.countdownInterval&&(clearInterval(this.countdownInterval),this.countdownInterval=null),this.microphone&&(this.microphone.disconnect(),this.microphone=null),this.analyser&&(this.analyser.disconnect(),this.analyser=null),this.bpmDetector&&(this.bpmDetector.reset(),this.bpmDetector=null),window.dispatchEvent(new CustomEvent("training-stopped"))}}class I{constructor(){this.songs=[],this.currentSongIndex=0}addSong(n,t){this.songs.push({name:n,bpm:t})}getCurrentSong(){return this.songs.length>0?this.songs[this.currentSongIndex]:null}nextSong(){return 0===this.songs.length?null:(this.currentSongIndex=(this.currentSongIndex+1)%this.songs.length,this.songs[this.currentSongIndex])}getSongList(){return[...this.songs]}reset(){this.currentSongIndex=0}}var y,w=function(n,t,e,r){return new(e||(e=Promise))((function(o,i){function a(n){try{c(r.next(n))}catch(n){i(n)}}function s(n){try{c(r.throw(n))}catch(n){i(n)}}function c(n){var t;n.done?o(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}c((r=r.apply(n,t||[])).next())}))};!function(n){n.Classic="classic",n.Training="training"}(y||(y={}));class k{constructor(){this.currentMode=y.Classic,this.isPlaying=!1,this.tempo=120,this.soundEngine=new B,this.audioContext=this.soundEngine.getAudioContext(),this.audioTimer=new C(this.soundEngine),this.trainingEngine=new x(this.audioContext),this.songTrainingManager=new I,this.visualIndicator=document.querySelector(".visual-indicator"),this.audioTimer.setVisualCallback((()=>{this.visualIndicator.classList.add("active"),setTimeout((()=>{this.visualIndicator.classList.remove("active")}),100)})),this.initializeUI(),this.setupEventListeners(),this.setupTrainingEventListeners()}initializeUI(){return w(this,void 0,void 0,(function*(){const n=document.querySelector(".container"),t=document.createElement("div");t.className="app-header";const e=document.createElement("div");e.className="metronome-logo",e.innerHTML='\n            <svg width="40" height="40" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">\n                <path d="M35 85 L65 85 L70 20 L50 10 L30 20 Z" \n                      stroke="currentColor" \n                      stroke-width="4" \n                      fill="none"/>\n                <line x1="50" y1="40" x2="65" y2="50" \n                      stroke="currentColor" \n                      stroke-width="4" \n                      stroke-linecap="round"/>\n                <circle cx="50" cy="40" r="3" fill="currentColor"/>\n            </svg>\n            <span>Pro Metronome</span>\n        ';const r=document.createElement("button");r.className="install-button",r.innerHTML='\n    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">\n        <path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"/>\n    </svg>\n    Ajouter à l\'écran d\'accueil\n',r.style.display="none";let o=null;window.matchMedia("(display-mode: standalone)").matches?r.style.display="none":window.addEventListener("beforeinstallprompt",(n=>{n.preventDefault(),o=n,r.style.display="flex",this.bpmFeedbackElement.textContent="Vous pouvez installer l'application sur votre appareil !",setTimeout((()=>{this.bpmFeedbackElement.textContent=""}),3e3)})),r.addEventListener("click",(()=>w(this,void 0,void 0,(function*(){if(o){try{yield o.prompt(),"accepted"===(yield o.userChoice).outcome&&(r.style.display="none",this.bpmFeedbackElement.textContent="Installation réussie !",setTimeout((()=>{this.bpmFeedbackElement.textContent=""}),2e3))}catch(n){console.error("Erreur lors de l'installation:",n),this.bpmFeedbackElement.textContent="Erreur lors de l'installation. Réessayez plus tard."}o=null}})))),window.addEventListener("appinstalled",(()=>{r.style.display="none",this.bpmFeedbackElement.textContent="Application installée avec succès !",setTimeout((()=>{this.bpmFeedbackElement.textContent=""}),2e3)})),t.appendChild(e),t.appendChild(r);const i=document.createElement("div");i.className="controls";const a=document.createElement("div");a.className="mode-switcher",this.classicModeButton=document.createElement("button"),this.classicModeButton.textContent="Classic Mode",this.classicModeButton.className="mode-button classic active",this.trainingModeButton=document.createElement("button"),this.trainingModeButton.textContent="Training Mode",this.trainingModeButton.className="mode-button training",this.tempoSlider=document.createElement("input"),this.tempoSlider.type="range",this.tempoSlider.id="tempo-slider",this.tempoSlider.min="40",this.tempoSlider.max="250",this.tempoSlider.value="120",this.tempoNumber=document.createElement("input"),this.tempoNumber.type="number",this.tempoNumber.id="tempo-number",this.tempoNumber.min="40",this.tempoNumber.max="250",this.tempoNumber.value="120";const s=document.createElement("div");s.className="tempo-settings",s.appendChild(this.tempoSlider),s.appendChild(this.tempoNumber),this.startStopButton=document.createElement("button"),this.startStopButton.className="start-stop-button stopped",this.startStopButton.textContent="Start",this.nextSongButton=document.createElement("button"),this.nextSongButton.className="control-button next-song",this.nextSongButton.textContent="Next Song",this.nextSongButton.style.display="none",this.addSongButton=document.createElement("button"),this.addSongButton.className="control-button add-song",this.addSongButton.textContent="Add Song",this.addSongButton.style.display="none",this.bpmFeedbackElement=document.createElement("div"),this.bpmFeedbackElement.className="feedback-container",this.songListElement=document.createElement("div"),this.songListElement.className="song-list-container",a.appendChild(this.classicModeButton),a.appendChild(this.trainingModeButton),n.innerHTML="",n.appendChild(t),i.appendChild(a),i.appendChild(s),i.appendChild(this.startStopButton),i.appendChild(this.nextSongButton),i.appendChild(this.addSongButton),i.appendChild(this.bpmFeedbackElement),i.appendChild(this.songListElement),n.appendChild(i),this.updateButtonStates()}))}setupEventListeners(){this.classicModeButton.addEventListener("click",(()=>this.switchMode(y.Classic))),this.trainingModeButton.addEventListener("click",(()=>this.switchMode(y.Training))),this.startStopButton.addEventListener("click",(()=>this.togglePlayback())),this.nextSongButton.addEventListener("click",(()=>this.switchToNextSong())),this.addSongButton.addEventListener("click",(()=>this.showAddSongPrompt())),this.tempoSlider.addEventListener("input",(n=>{const t=parseInt(n.target.value);this.setTempo(t),this.tempoNumber.value=t.toString()})),this.tempoNumber.addEventListener("change",(n=>{const t=parseInt(n.target.value);this.setTempo(t),this.tempoSlider.value=t.toString()}))}setupTrainingEventListeners(){window.addEventListener("training-started",(n=>{const t=n,{targetBpm:e,duration:r}=t.detail;this.setTempo(e),this.tempoSlider&&(this.tempoSlider.value=e.toString()),this.tempoNumber&&(this.tempoNumber.value=e.toString()),this.bpmFeedbackElement.innerHTML=`Training Started: ${e} BPM`})),window.addEventListener("training-countdown",(n=>{const t=n,{remainingTime:e,totalDuration:r}=t.detail,o=document.createElement("div");o.style.width=e/r*100+"%",o.style.height="5px",o.style.backgroundColor="green",o.style.transition="width 1s linear",this.bpmFeedbackElement.innerHTML=`Time Left: ${e}s`,this.bpmFeedbackElement.appendChild(o)})),window.addEventListener("training-stopped",(()=>{this.bpmFeedbackElement.textContent="Training Complete!"})),window.addEventListener("training-error",(n=>{const t=n,{message:e}=t.detail;this.bpmFeedbackElement.textContent=`Error: ${e}`,this.bpmFeedbackElement.style.color="red"}))}updateButtonStates(){return w(this,void 0,void 0,(function*(){const n=this.songTrainingManager.getSongList(),t=n.length>0,e=n.length>1;this.currentMode===y.Training?(this.addSongButton.style.display="inline-block",this.nextSongButton.style.display=e?"inline-block":"none",this.tempoSlider.disabled=!0,this.tempoNumber.disabled=!0,this.startStopButton.disabled=!t,yield this.updateSongList(n)):(this.addSongButton.style.display="none",this.nextSongButton.style.display="none",this.tempoSlider.disabled=!1,this.tempoNumber.disabled=!1,this.startStopButton.disabled=!1,this.songListElement.innerHTML="")}))}updateSongList(n){return w(this,void 0,void 0,(function*(){if(this.songListElement.innerHTML="",this.currentMode===y.Training){const t=document.createElement("h3");if(t.textContent="Song List",this.songListElement.appendChild(t),yield this.addMicrophoneStatus(this.songListElement),0===n.length){const n=document.createElement("p");n.className="no-songs",n.textContent="No songs added yet. Add a song to start training!",this.songListElement.appendChild(n)}else{const t=this.songTrainingManager.getCurrentSong(),e=this.getNextSong(),r=document.createElement("div");if(r.className="current-song",r.innerHTML=`\n                    <h4>Current Song</h4>\n                    <div class="song-item current">\n                        ${t?`▶ ${t.name} (${t.bpm} BPM)`:"No song selected"}\n                    </div>\n                `,this.songListElement.appendChild(r),n.length>1){const n=document.createElement("div");n.className="next-song",n.innerHTML=`\n                        <h4>Next Song</h4>\n                        <div class="song-item next">\n                            ${e?`→ ${e.name} (${e.bpm} BPM)`:"No next song"}\n                        </div>\n                    `,this.songListElement.appendChild(n)}const o=document.createElement("div");o.className="all-songs",o.innerHTML="<h4>All Songs</h4>",n.forEach(((n,r)=>{const i=document.createElement("div");i.className="song-item";let a="  ";t&&n.name===t.name?(a="▶ ",i.classList.add("current")):e&&n.name===e.name&&(a="→ ",i.classList.add("next")),i.textContent=`${a}${r+1}. ${n.name} (${n.bpm} BPM)`,o.appendChild(i)})),this.songListElement.appendChild(o)}}}))}getNextSong(){const n=this.songTrainingManager.getSongList(),t=n.findIndex((n=>{var t;return n.name===(null===(t=this.songTrainingManager.getCurrentSong())||void 0===t?void 0:t.name)}));return-1===t||n.length<=1?null:n[(t+1)%n.length]}switchToNextSong(){const n=this.songTrainingManager.nextSong();n&&this.isPlaying&&(this.startTrainingMode(n.bpm),this.bpmFeedbackElement.textContent=`Switched to: ${n.name} (${n.bpm} BPM)`,this.updateSongList(this.songTrainingManager.getSongList()))}addMicrophoneStatus(n){return w(this,void 0,void 0,(function*(){const t=document.createElement("div");t.className="mic-status";try{const n=(yield navigator.mediaDevices.enumerateDevices()).some((n=>"audioinput"===n.kind));t.innerHTML=`\n                <h4>BPM Tracking Status</h4>\n                <div class="status-indicator ${n?"available":"unavailable"}">\n                    <span class="icon">${n?"🎤":"❌"}</span>\n                    <span class="text">\n                        ${n?"Microphone detected - BPM tracking available":"No microphone detected - BPM tracking unavailable"}\n                    </span>\n                </div>\n            `}catch(n){t.innerHTML='\n                <h4>BPM Tracking Status</h4>\n                <div class="status-indicator unavailable">\n                    <span class="icon">❌</span>\n                    <span class="text">Unable to detect microphone</span>\n                </div>\n            '}n.insertBefore(t,n.firstChild)}))}updateStartStopButton(){this.startStopButton.textContent=this.isPlaying?"Stop":"Start",this.startStopButton.classList.toggle("running",this.isPlaying),this.startStopButton.classList.toggle("stopped",!this.isPlaying)}togglePlayback(){if(this.isPlaying)this.stop();else if(this.currentMode===y.Training){const n=this.songTrainingManager.getCurrentSong();if(!n)return void(window.confirm("No songs available. Would you like to add a song?")&&this.showAddSongPrompt());this.startTrainingMode(n.bpm)}else this.start();this.updateStartStopButton()}showAddSongPrompt(){const n=window.prompt("Enter song name:"),t=window.prompt("Enter BPM for this song (40-250):");if(n&&t){const e=parseInt(t);e>=40&&e<=250?(this.songTrainingManager.addSong(n,e),this.updateButtonStates()):alert("BPM must be between 40 and 250")}}setTempo(n){this.tempo=Math.max(40,Math.min(250,n)),this.audioTimer.setTempo(this.tempo)}start(){this.trainingEngine.isRunning&&this.trainingEngine.stop(),this.isPlaying=!0,this.audioTimer.start(),this.updateStartStopButton()}stop(){this.isPlaying=!1,this.audioTimer.stop(),this.currentMode===y.Training&&this.trainingEngine.stop(),this.updateStartStopButton()}startTrainingMode(n){this.isPlaying&&this.stop(),this.isPlaying=!0,this.trainingEngine.start(n),this.updateStartStopButton()}switchMode(n){if(this.currentMode=n,n===y.Classic?(this.classicModeButton.classList.add("active"),this.trainingModeButton.classList.remove("active")):(this.classicModeButton.classList.remove("active"),this.trainingModeButton.classList.add("active")),this.stop(),this.updateButtonStates(),n===y.Training){const n=this.songTrainingManager.getCurrentSong();n&&(this.setTempo(n.bpm),this.tempoSlider&&(this.tempoSlider.value=n.bpm.toString()),this.tempoNumber&&(this.tempoNumber.value=n.bpm.toString()))}}}window.addEventListener("DOMContentLoaded",(()=>{new k}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,